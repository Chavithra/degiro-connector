"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.struct_pb2
import google.protobuf.timestamp_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class Metadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESPONSE_DATETIME_FIELD_NUMBER: builtins.int
    REQUEST_DURATION_FIELD_NUMBER: builtins.int
    @property
    def response_datetime(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def request_duration(self) -> google.protobuf.duration_pb2.Duration: ...
    def __init__(
        self,
        *,
        response_datetime: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        request_duration: google.protobuf.duration_pb2.Duration | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["request_duration", b"request_duration", "response_datetime", b"response_datetime"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["request_duration", b"request_duration", "response_datetime", b"response_datetime"]) -> None: ...

global___Metadata = Metadata

@typing_extensions.final
class Quotecast(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class Request(google.protobuf.message.Message):
        """MESSAGES"""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing_extensions.final
        class SubscriptionsEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: builtins.str
            @property
            def value(self) -> google.protobuf.struct_pb2.ListValue: ...
            def __init__(
                self,
                *,
                key: builtins.str = ...,
                value: google.protobuf.struct_pb2.ListValue | None = ...,
            ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

        @typing_extensions.final
        class UnsubscriptionsEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: builtins.str
            @property
            def value(self) -> google.protobuf.struct_pb2.ListValue: ...
            def __init__(
                self,
                *,
                key: builtins.str = ...,
                value: google.protobuf.struct_pb2.ListValue | None = ...,
            ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

        SUBSCRIPTIONS_FIELD_NUMBER: builtins.int
        UNSUBSCRIPTIONS_FIELD_NUMBER: builtins.int
        @property
        def subscriptions(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, google.protobuf.struct_pb2.ListValue]:
            """<vwd_id, metrics>"""
        @property
        def unsubscriptions(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, google.protobuf.struct_pb2.ListValue]:
            """<vwd_id, metrics>"""
        def __init__(
            self,
            *,
            subscriptions: collections.abc.Mapping[builtins.str, google.protobuf.struct_pb2.ListValue] | None = ...,
            unsubscriptions: collections.abc.Mapping[builtins.str, google.protobuf.struct_pb2.ListValue] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["subscriptions", b"subscriptions", "unsubscriptions", b"unsubscriptions"]) -> None: ...

    JSON_DATA_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    json_data: builtins.str
    """PROPERTIES"""
    @property
    def metadata(self) -> global___Metadata: ...
    def __init__(
        self,
        *,
        json_data: builtins.str = ...,
        metadata: global___Metadata | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["json_data", b"json_data", "metadata", b"metadata"]) -> None: ...

global___Quotecast = Quotecast

@typing_extensions.final
class Ticker(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class Metrics(google.protobuf.message.Message):
        """MESSAGES"""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing_extensions.final
        class MetricsEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: builtins.str
            value: builtins.float
            def __init__(
                self,
                *,
                key: builtins.str = ...,
                value: builtins.float = ...,
            ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

        METRICS_FIELD_NUMBER: builtins.int
        @property
        def metrics(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.float]:
            """<metric_name, metric_value>"""
        def __init__(
            self,
            *,
            metrics: collections.abc.Mapping[builtins.str, builtins.float] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["metrics", b"metrics"]) -> None: ...

    @typing_extensions.final
    class ProductsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___Ticker.Metrics: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___Ticker.Metrics | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    METADATA_FIELD_NUMBER: builtins.int
    PRODUCTS_FIELD_NUMBER: builtins.int
    PRODUCT_LIST_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata:
        """PROPERTIES"""
    @property
    def products(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___Ticker.Metrics]:
        """<vwd_id, metrics>"""
    @property
    def product_list(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        products: collections.abc.Mapping[builtins.str, global___Ticker.Metrics] | None = ...,
        product_list: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["metadata", b"metadata", "product_list", b"product_list", "products", b"products"]) -> None: ...

global___Ticker = Ticker

@typing_extensions.final
class Chart(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Interval:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _IntervalEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Chart._Interval.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        PT1S: Chart._Interval.ValueType  # 0
        PT15S: Chart._Interval.ValueType  # 1
        PT30S: Chart._Interval.ValueType  # 2
        PT1M: Chart._Interval.ValueType  # 3
        PT5M: Chart._Interval.ValueType  # 4
        PT15M: Chart._Interval.ValueType  # 5
        PT30M: Chart._Interval.ValueType  # 6
        PT60M: Chart._Interval.ValueType  # 7
        PT1H: Chart._Interval.ValueType  # 8
        P1D: Chart._Interval.ValueType  # 9
        P1W: Chart._Interval.ValueType  # 10
        P1M: Chart._Interval.ValueType  # 11
        P3M: Chart._Interval.ValueType  # 12
        P6M: Chart._Interval.ValueType  # 13
        P1Y: Chart._Interval.ValueType  # 14
        P3Y: Chart._Interval.ValueType  # 15
        P5Y: Chart._Interval.ValueType  # 16
        P10Y: Chart._Interval.ValueType  # 17
        P50Y: Chart._Interval.ValueType  # 18
        YTD: Chart._Interval.ValueType  # 19

    class Interval(_Interval, metaclass=_IntervalEnumTypeWrapper):
        """ENUMS"""

    PT1S: Chart.Interval.ValueType  # 0
    PT15S: Chart.Interval.ValueType  # 1
    PT30S: Chart.Interval.ValueType  # 2
    PT1M: Chart.Interval.ValueType  # 3
    PT5M: Chart.Interval.ValueType  # 4
    PT15M: Chart.Interval.ValueType  # 5
    PT30M: Chart.Interval.ValueType  # 6
    PT60M: Chart.Interval.ValueType  # 7
    PT1H: Chart.Interval.ValueType  # 8
    P1D: Chart.Interval.ValueType  # 9
    P1W: Chart.Interval.ValueType  # 10
    P1M: Chart.Interval.ValueType  # 11
    P3M: Chart.Interval.ValueType  # 12
    P6M: Chart.Interval.ValueType  # 13
    P1Y: Chart.Interval.ValueType  # 14
    P3Y: Chart.Interval.ValueType  # 15
    P5Y: Chart.Interval.ValueType  # 16
    P10Y: Chart.Interval.ValueType  # 17
    P50Y: Chart.Interval.ValueType  # 18
    YTD: Chart.Interval.ValueType  # 19

    @typing_extensions.final
    class Request(google.protobuf.message.Message):
        """MESSAGES"""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing_extensions.final
        class OverrideEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: builtins.str
            value: builtins.str
            def __init__(
                self,
                *,
                key: builtins.str = ...,
                value: builtins.str = ...,
            ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

        REQUESTID_FIELD_NUMBER: builtins.int
        RESOLUTION_FIELD_NUMBER: builtins.int
        CULTURE_FIELD_NUMBER: builtins.int
        PERIOD_FIELD_NUMBER: builtins.int
        SERIES_FIELD_NUMBER: builtins.int
        TZ_FIELD_NUMBER: builtins.int
        OVERRIDE_FIELD_NUMBER: builtins.int
        requestid: builtins.str
        resolution: global___Chart.Interval.ValueType
        culture: builtins.str
        period: global___Chart.Interval.ValueType
        @property
        def series(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
        tz: builtins.str
        @property
        def override(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
        def __init__(
            self,
            *,
            requestid: builtins.str = ...,
            resolution: global___Chart.Interval.ValueType = ...,
            culture: builtins.str = ...,
            period: global___Chart.Interval.ValueType = ...,
            series: collections.abc.Iterable[builtins.str] | None = ...,
            tz: builtins.str = ...,
            override: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["culture", b"culture", "override", b"override", "period", b"period", "requestid", b"requestid", "resolution", b"resolution", "series", b"series", "tz", b"tz"]) -> None: ...

    @typing_extensions.final
    class Serie(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        TIMES_FIELD_NUMBER: builtins.int
        EXPIRES_FIELD_NUMBER: builtins.int
        DATA_FIELD_NUMBER: builtins.int
        ID_FIELD_NUMBER: builtins.int
        TYPE_FIELD_NUMBER: builtins.int
        times: builtins.str
        expires: builtins.str
        @property
        def data(self) -> google.protobuf.struct_pb2.ListValue: ...
        id: builtins.str
        type: builtins.str
        def __init__(
            self,
            *,
            times: builtins.str = ...,
            expires: builtins.str = ...,
            data: google.protobuf.struct_pb2.ListValue | None = ...,
            id: builtins.str = ...,
            type: builtins.str = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["data", b"data"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "expires", b"expires", "id", b"id", "times", b"times", "type", b"type"]) -> None: ...

    REQUESTID_FIELD_NUMBER: builtins.int
    START_FIELD_NUMBER: builtins.int
    END_FIELD_NUMBER: builtins.int
    RESOLUTION_FIELD_NUMBER: builtins.int
    SERIES_FIELD_NUMBER: builtins.int
    requestid: builtins.str
    """PROPERTIES"""
    start: builtins.str
    end: builtins.str
    resolution: builtins.str
    @property
    def series(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Chart.Serie]: ...
    def __init__(
        self,
        *,
        requestid: builtins.str = ...,
        start: builtins.str = ...,
        end: builtins.str = ...,
        resolution: builtins.str = ...,
        series: collections.abc.Iterable[global___Chart.Serie] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["end", b"end", "requestid", b"requestid", "resolution", b"resolution", "series", b"series", "start", b"start"]) -> None: ...

global___Chart = Chart